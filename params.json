{"name":"Android-Parcelable","tagline":"在Activity間傳遞自定類別物件 - 實作Parcelable","body":"# 透過Intent傳遞資料\r\n* 可傳遞的data type\r\n  * **Primitive data type**: byte, byte[], int, int[], double, String...\r\n  * **Serializable**\r\n  * **Parcelable**\r\n* 如果想傳一個自定類別的物件，該類別就得實作*Serializable*或*Parcelable*，本篇實作*Parcelable interface*\r\n\r\n***\r\n# <a href=\"http://www.developerphil.com/parcelable-vs-serializable/\" target=\"_blank\">Serializable vs Parcelable 比較</a>\r\n* ***Serializable***只要把class加上**`implements Serializable`**就結束了\r\n* ***Parcelable***的執行效率比較快，實作稍微複雜\r\n\r\n***\r\n#實作Parcelable interface\r\n* 在`writeToParcel(Parcel, int)`內將資料寫入**`Parcel`**\r\n```java\r\npublic class MyData implements Parcelable {\r\n    private String firstName;\r\n    private String lastName;\r\n    \r\n    @Override\r\n    public int describeContents() {\r\n        return 0;\r\n    }\r\n    \r\n    @Override\r\n    public void writeToParcel(Parcel destination, int flags) {\r\n        destination.writeString(firstName);\r\n        destination.writeString(lastName);\r\n    }\r\n}\r\n```\r\n* 必須有個**CREATOR***（而且變數名稱跟大小寫都要一樣）*，在傳遞Parcel後會利用**CREATOR**建構物件\r\n* 注意下面利用兩次`readString()`依序取出String，順序要和`writeString(String)`的一樣喔～\r\n```java\r\npublic static final Creator<MyData> CREATOR = new Creator<MyData>() {\r\n    @Override public MyData createFromParcel(Parcel source) { return new MyData(source); }\r\n    @Override public MyData[] newArray(int size) { return new MyData[size]; }\r\n};\r\n\r\nprivate MyData(Parcel source) {\r\n    firstName = source.readString();\r\n    lastName = source.readString();\r\n}\r\n```\r\n***\r\n* 剛才有提到`readString()`跟`writeString(String)`的順序不能錯，因為他們兩個都是String，錯了應該也很好發現問題所在，下面的程式一樣是順序問題，但是會有更嚴重的錯誤：\r\n```java\r\npublic class MyData implements Parcelable {\r\n    private String name;\r\n    private int age;\r\n    \r\n    @Override\r\n    public void writeToParcel(Parcel destination, int flags) {\r\n        destination.writeString(name);\r\n        destination.writeInt(age);\r\n    }\r\n    \r\n    private MyData(Parcel source) {\r\n        age = source.readInt();\r\n        name = source.readString();\r\n    }\r\n    ...\r\n}\r\n```\r\n```json\r\nThrowing OutOfMemoryError: \"Failed to allocate a 220204076 byte allocation with 4194304 free bytes and 33MB until OOM\"\r\n```\r\n# 我就順序錯了給我OOM是哪招XDD **請小心！！！**\r\n***\r\n# 以上是實作一個簡單的Parcelable，在範例程式裡面還有一些其他方法運用：\r\n* `writeTypedList(List<T>)`、`readTypedList(List<T>, Creator<T>)`\r\n* **Activity**裡有把Parcelable放進intent的方式\r\n\r\n***\r\n#參考連結\r\nhttp://developer.android.com/reference/android/os/Parcelable.html\r\n\r\nhttp://www.developerphil.com/parcelable-vs-serializable/\r\n\r\nhttp://blog.prolificinteractive.com/2014/07/18/why-we-love-parcelable/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}